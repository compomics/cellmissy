#summary How to use CellMissy
#labels Featured

= Manual =
Developed to follow the steps typically encountered in a cell migration experiment, *CellMissy* is composed of three modules:

 * _Experiment manager_: set-up a new cell migration/invasion experiment
 * _Data Loader_: import and store motility data
 * _Data Analyzer_: explore and analyze motility data

The main unit around which these three modules are built is the experiment: clicking on the *_Experiment_* menu, three items are shown. Each of these items corresponds to a module and is described in more detail below.

== Create a new experiment ==
This module guides you through the design of a cell migration/invasion experiment. After having chosen a project to which the experiment is going to belong, and having provided a number and a short description for the experiment, you can define its set-up on a multi-well plate view. Common multi-well plate formats are rendered on the view, namely 96 (8 columns x 12 rows), 48 (6 x 8), 24 (4 x 6), 12 (3 x  4), 6 (2 x 3). Here, groups of wells (or individual wells) can be selected to define biological conditions. Please note that wells within such a group are taken to be technical replicates in further data loading/analysis. A list keeps track of how many biological conditions are being defined for the current experiment and, once a condition is added to the list, a color is automatically assigned to it. Different informative metadata variables can be chosen for each biological condition in the right panel of the GUI. Here, three tabs show different views according to the variables to be chosen:
 * _Cell Line_: here the cell line used in the experiment can be chosen; you can define and customize parameters such as seeding density (number of cells _per_ well), growth medium and serum.
 * _Assay_ECM_: here you can characterize the Extra Cellular Matrix (ECM), in terms of dimensionality (are you designing a _migration_ or an _invasion_ experiment?), coating type, coating temperature and so on. 
 * _Treatments_: the last tab gives you the possibility to add any kind of treatment or compound to your biological condition, specifying for example the concentration and the presence of any drug solvent.

Once the experimental set-up is finalized, you can export the design as a PDF document that can be used as a reference in the lab while conducting the experiment.
Then, the plate lay-out, well assignments and related metadata are all stored in the database. 
== Load motility data... ==
After defining the experimental set-up, the next step is the import of the relevant cell motion data. Data import and storage in CellMissy can be based on CELLMIA output as well as the generic motility tracking input format. See following sections for more details.
=== ... from CELLMIA ===
The import and storage of motility data that were generated by CELLMIA (http://www.dcilabs.com/Software.php) is fully automated in CellMissy. Once you select the experiment for which you want to import and store the data, CellMissy looks for a file generated at microscope imaging time; this file has a _.obsep_ extension (see http://loci.wisc.edu/software/bio-formats for further information), and contains the experiment metadata information, as well as the names and the metadata of imaging types used during the image recording and the names of the positions list(s) defined and generated. If the file is not in the right folder or more than one files are present, you can select a file to associate to the current session. Once these metadata are retrieved, CellMissy processes the CELLMIA text files: all you have to do is to click on the first well that was imaged for first; all the others wells will be automatically highlighted (if imaged), according to the position list associated to the current imaging type. The plate view can be reset at any time and the import can be cancelled for a certain bench of data. Once the import is finished, you can save the motility data to the database.
=== ... from generic input ===
If you use any other package for segmentation and image processing, you can import motility data from a generic input file. In this case, CellMissy expects at least one tab-separated text file for each well, containing one record per line, and two columns per record. The first column holds the time information (this can be minutes or simply time sequence steps) and the second column the area values (these can be expressed in µm^2^, pixels or percentage %). You can start the import adding names for datasets and imaging types of interest. One dataset could e.g. stand for a collection of motility data generated through a specific algorithm of image processing. Once an imaging type is added to the session, it is automatically added to each dataset. However, a well (or a biological condition) can have been imaged with only a specific imaging technique, or a certain dataset been generated only for a specific group of conditions. That's why CellMissy does not require every combination of dataset/imaging type to be supplied for each well. Furthermore, you can load load multiple files per well, even for a certain combination of dataset/imaging type, allowing the use of multiple imaging locations within the well. A table underneath the plate view keeps track of the imported area values, together with current dataset, imaging type, and well's column, row. Once the import is done, and experiment metadata are supplied, you can start storing the data. 
== Data Analysis ==
Once data are loaded in the system, interpretation and reporting of these data can be performed by CellMissy in the Data analyzer module. Here, you can select an experiment in the main view, and a small summary of it is provided. For the chosen experiment, you need to select a dataset and an imaging type: motility data associated with these two will be loaded from the database, allowing visualization and analysis. Before starting an analysis session, you also have to provide the area unit of measurement (this can be µm^2^, pixels or %), and specify if the measured area in the wound healing assay is the cell covered area (i.e. the wound closure) or the open area (i.e. the wound area). The general workflow for the data analysis is the same for both situations, but open area values are first transformed to cell covered area values and always expressed in %.
 The first two points in the data analysis are condition-based: clicking on a biological condition, relative area values are retrieved from the database and exploited into details.
 # _Data importing_. The first view encountered is simply a data importer, where area values are shown, together with time information and well's identifiers (columns, rows).
 # _Pre-processing_. Secondly, a pre-procession of the data is performed, where the raw data are normalized in terms of starting location at time zero. If open area, values are normalized to 100, and then expressed in percentage of cell covered area (complementary to 100); if cell covered area, values are normalized to 0. Here, evolution in time of the area values for each technical replicate is plotted. Delta area increments between time frame _t(n)_ and _t(n+1)_ are shown and percentages of area increase between consecutive time points are computed. Here, _data quality control_ takes place, with outliers detection and correction within each well. This procedure is visualized using a Kernel Density Estimator, plotting the probability density functions of the area increase between consecutive time points. Left chart presents always raw data, and outliers are highlighted in red in the data table, while right chart depicts corrected data. Corrected data can be better visualized in the next step, where the technical precision is examined between replicate wells using Euclidean distance as the similarity metric. You can either accept or adapt the suggestions by CellMissy, both for outliers correction and replicates exclusion. Furthermore, you can adjust the time interval in which you want to analyse the data.<br />The last two points in the data analysis show the overall experiment, going from technical replicates/single biological conditions to the entire dataset. 
 # _Global view_. In the Global View panel, you see the evolution in time of the area for each biological condition, where area values from different technical replicates have been averaged. You can either use corrected data or retain original data, and you can also select a subset of conditions you want to include int the plot. Standard error of the mean can be plotted on top as well. 
 # _Linear Regression Model_. Here, CellMissy makes use of a linear regression model to extract a slope and R^2^ for each replicate in a biological condition. These slopes are then averaged for a given biological condition, providing the median velocity of invasion/wound closure. The bar chart in this view presents the median velocity computed for each biological condition. You can the select a set of biological conditions, and provide a name for this defined group, on which statistical analysis can be then performed. A summary statistics is provided for all conditions, and all pair-wise differences in median velocity between them are then analyzed using a Mann-Whitney U test. If you want to correct for multiple hypothesis testing, you can either choose a Bonferroni or Benjamini-Hochberg correction. CellMissy provides three standard significance levels (namely 0.01, 0.05 and 0.1), and significant differences are highlighted in green in the p-values table.
Please note that every plot generated in CellMissy can be exported as a PNG file and can be easily customized through the _Properties..._ menu.

You can then export detailed analysis report in PDF that summarizes the methods, data and results using text, tables and graphics. 