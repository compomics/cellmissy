/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LinearRegressionPanel.java
 *
 * Created on Dec 4, 2012, 2:10:47 PM
 */
package be.ugent.maf.cellmissy.gui.experiment.analysis;

import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
 *
 * @author Paola Masuzzo
 */
public class LinearRegressionPanel extends javax.swing.JPanel {

    /** Creates new form LinearRegressionPanel */
    public LinearRegressionPanel() {
        initComponents();
    }

    public JPanel getChartParentPanel() {
        return chartParentPanel;
    }

    public JTable getSlopesTable() {
        return slopesTable;
    }

    public JScrollPane getSlopesTableScrollPane() {
        return slopesTableScrollPane;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        linearRegressionTablePanel = new javax.swing.JPanel();
        slopesTableScrollPane = new javax.swing.JScrollPane();
        slopesTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        chartParentPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridBagLayout());

        linearRegressionTablePanel.setOpaque(false);
        linearRegressionTablePanel.setPreferredSize(new java.awt.Dimension(20, 20));

        slopesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        slopesTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        slopesTableScrollPane.setViewportView(slopesTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel1.setText("This table contains slopes together with goodness of fit coefficients for each replicate and each condition.");

        javax.swing.GroupLayout linearRegressionTablePanelLayout = new javax.swing.GroupLayout(linearRegressionTablePanel);
        linearRegressionTablePanel.setLayout(linearRegressionTablePanelLayout);
        linearRegressionTablePanelLayout.setHorizontalGroup(
            linearRegressionTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(linearRegressionTablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(linearRegressionTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slopesTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 951, Short.MAX_VALUE))
                .addContainerGap())
        );
        linearRegressionTablePanelLayout.setVerticalGroup(
            linearRegressionTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(linearRegressionTablePanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(slopesTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        add(linearRegressionTablePanel, gridBagConstraints);

        chartParentPanel.setMinimumSize(new java.awt.Dimension(20, 20));
        chartParentPanel.setOpaque(false);
        chartParentPanel.setPreferredSize(new java.awt.Dimension(20, 20));
        chartParentPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        add(chartParentPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chartParentPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel linearRegressionTablePanel;
    private javax.swing.JTable slopesTable;
    private javax.swing.JScrollPane slopesTableScrollPane;
    // End of variables declaration//GEN-END:variables
}
