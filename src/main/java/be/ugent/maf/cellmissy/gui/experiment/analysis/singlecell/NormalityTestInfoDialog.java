/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package be.ugent.maf.cellmissy.gui.experiment.analysis.singlecell;

/**
 *
 * @author ninad
 */
public class NormalityTestInfoDialog extends javax.swing.JDialog {

    /**
     * Creates new form NormalityTestInfoDialog
     */
    public NormalityTestInfoDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoScrollPane = new javax.swing.JScrollPane();
        infoEditorPane = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        infoEditorPane.setEditable(false);
        infoEditorPane.setContentType("text/html\n"); // NOI18N
        infoEditorPane.setText("Tests on the shape and normality of the parameters\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nThe following tests try to give an indication about the distribution of the data.\nThe Anderson-Darling test is a normality test.\nThe skewness and kurtosis give an indication about the shape of the data.\n\nThe different outcomes for the kurtosis are mesokurtic, leptokurtic and platykurtic.\nMesokurtic means that the distribution has a kurtosis around zero, matching that of the normal distribution. \nThis means that the given data has a similar distribution of extreme values as the Gaussian distribution.\nPositive excess kurtosis means that the distribution is leptokurtic, which means that it has fatter tails than the Gaussian distribution.\nNegative excess kurtosis means that the distribtuion is platykurtic, which means that it has thinner tails than the Gaussian distribution.\n\nPlease note that these tests only give an indication about normality. Inspection of the QQ-plot is necessary to conclude (non-)normality.");
        infoEditorPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        infoEditorPane.setFocusable(false);
        infoScrollPane.setViewportView(infoEditorPane);
        infoEditorPane.getAccessibleContext().setAccessibleName("infoEditorPane");
        infoEditorPane.getAccessibleContext().setAccessibleDescription("text/html\n");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 782, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(infoScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(infoScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NormalityTestInfoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NormalityTestInfoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NormalityTestInfoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NormalityTestInfoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NormalityTestInfoDialog dialog = new NormalityTestInfoDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane infoEditorPane;
    private javax.swing.JScrollPane infoScrollPane;
    // End of variables declaration//GEN-END:variables
}
