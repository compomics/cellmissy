/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package be.ugent.maf.cellmissy.entity.result;

import java.util.HashMap;
import java.util.List;
import java.util.Objects;

/**
 * This class holds information on imported CMSO biotracks data. Contains
 * tracking software used, well coordinates and maps with objects and links
 * information.
 *
 * @author Gwendolien Sergeant
 */
public class BiotracksDataHolder {

    private final String software;

    private final int rowCoordinate;

    private final int columnCoordinate;

    // Have tried to put object info in new Object with id, frame, x and y info
    // but not straightforward in finding object by id using this Object
    // objectsmap inner list contains in this order: frame, x, y
    private final HashMap<Integer, List<Double>> objectsMap;

    private final HashMap<Integer, List<Integer>> linksMap;

    public BiotracksDataHolder(String software, int rowCoordinate, int columnCoordinate, HashMap<Integer, List<Double>> objectsMap, HashMap<Integer, List<Integer>> linksMap) {
        this.software = software;
        this.rowCoordinate = rowCoordinate;
        this.columnCoordinate = columnCoordinate;
        this.objectsMap = objectsMap;
        this.linksMap = linksMap;
    }

    /**
     * Getters and setters
     *
     * @return
     */
    public String getSoftware() {
        return software;
    }

    public int getRowCoordinate() {
        return rowCoordinate;
    }

    public int getColumnCoordinate() {
        return columnCoordinate;
    }

    public HashMap<Integer, List<Double>> getObjectsMap() {
        return objectsMap;
    }

    public HashMap<Integer, List<Integer>> getLinksMap() {
        return linksMap;
    }

    /**
     * Overrides auto generated by Netbeans
     *
     */
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 89 * hash + Objects.hashCode(this.software);
        hash = 89 * hash + this.rowCoordinate;
        hash = 89 * hash + this.columnCoordinate;
        hash = 89 * hash + Objects.hashCode(this.objectsMap);
        hash = 89 * hash + Objects.hashCode(this.linksMap);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final BiotracksDataHolder other = (BiotracksDataHolder) obj;
        if (this.rowCoordinate != other.rowCoordinate) {
            return false;
        }
        if (this.columnCoordinate != other.columnCoordinate) {
            return false;
        }
        if (!Objects.equals(this.software, other.software)) {
            return false;
        }
        if (!Objects.equals(this.objectsMap, other.objectsMap)) {
            return false;
        }
        if (!Objects.equals(this.linksMap, other.linksMap)) {
            return false;
        }
        return true;
    }

}
